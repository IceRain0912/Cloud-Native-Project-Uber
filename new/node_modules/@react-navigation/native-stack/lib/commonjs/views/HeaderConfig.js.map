{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderConfig","props","colors","route","title","headerRight","headerTitle","headerBackTitle","headerBackTitleVisible","headerHideBackButton","headerHideShadow","headerTintColor","headerLargeTitle","headerTranslucent","headerStyle","headerTitleStyle","headerLargeTitleStyle","headerBackTitleStyle","headerShown","gestureEnabled","undefined","name","fontFamily","fontSize","color","text","primary","backgroundColor","card"],"mappings":"2KAAA,oDACA,wDAKA,gD,kHAOe,QAASA,CAAAA,YAAT,CAAsBC,KAAtB,CAAoC,eAC9B,sBAD8B,CACzCC,MADyC,WACzCA,MADyC,IAG/CC,CAAAA,KAH+C,CAoB7CF,KApB6C,CAG/CE,KAH+C,CAI/CC,KAJ+C,CAoB7CH,KApB6C,CAI/CG,KAJ+C,CAK/CC,WAL+C,CAoB7CJ,KApB6C,CAK/CI,WAL+C,CAM/CC,WAN+C,CAoB7CL,KApB6C,CAM/CK,WAN+C,CAO/CC,eAP+C,CAoB7CN,KApB6C,CAO/CM,eAP+C,uBAoB7CN,KApB6C,CAQ/CO,sBAR+C,CAQ/CA,sBAR+C,gCAQtB,IARsB,uBAS/CC,oBAT+C,CAoB7CR,KApB6C,CAS/CQ,oBAT+C,CAU/CC,gBAV+C,CAoB7CT,KApB6C,CAU/CS,gBAV+C,CAW/CC,eAX+C,CAoB7CV,KApB6C,CAW/CU,eAX+C,CAY/CC,gBAZ+C,CAoB7CX,KApB6C,CAY/CW,gBAZ+C,CAa/CC,iBAb+C,CAoB7CZ,KApB6C,CAa/CY,iBAb+C,oBAoB7CZ,KApB6C,CAc/Ca,WAd+C,CAc/CA,WAd+C,6BAcjC,EAdiC,0CAoB7Cb,KApB6C,CAe/Cc,gBAf+C,CAe/CA,gBAf+C,gCAe5B,EAf4B,6CAoB7Cd,KApB6C,CAgB/Ce,qBAhB+C,CAgB/CA,qBAhB+C,gCAgBvB,EAhBuB,8CAoB7Cf,KApB6C,CAiB/CgB,oBAjB+C,CAiB/CA,oBAjB+C,iCAiBxB,EAjBwB,wBAkB/CC,WAlB+C,CAoB7CjB,KApB6C,CAkB/CiB,WAlB+C,CAmB/CC,cAnB+C,CAoB7ClB,KApB6C,CAmB/CkB,cAnB+C,CAsBjD,MACE,qBAAC,2CAAD,EACE,MAAM,CAAED,WAAW,GAAK,KAD1B,CAEE,WAAW,CAAEL,iBAAiB,GAAK,IAFrC,CAGE,UAAU,CAAEH,gBAHd,CAIE,cAAc,CAAED,oBAJlB,CAKE,KAAK,CACHH,WAAW,GAAKc,SAAhB,CACId,WADJ,CAEIF,KAAK,GAAKgB,SAAV,CACAhB,KADA,CAEAD,KAAK,CAACkB,IAVd,CAYE,eAAe,CAAEN,gBAAgB,CAACO,UAZpC,CAaE,aAAa,CAAEP,gBAAgB,CAACQ,QAblC,CAcE,UAAU,CACRR,gBAAgB,CAACS,KAAjB,GAA2BJ,SAA3B,CACIL,gBAAgB,CAACS,KADrB,CAEIb,eAAe,GAAKS,SAApB,CACAT,eADA,CAEAT,MAAM,CAACuB,IAnBf,CAqBE,SAAS,CAAEjB,sBAAsB,CAAGD,eAAH,CAAqB,GArBxD,CAsBE,mBAAmB,CAAEU,oBAAoB,CAACK,UAtB5C,CAuBE,iBAAiB,CAAEL,oBAAoB,CAACM,QAvB1C,CAwBE,KAAK,CAAEZ,eAAe,GAAKS,SAApB,CAAgCT,eAAhC,CAAkDT,MAAM,CAACwB,OAxBlE,CA2BE,cAAc,CAAEP,cA3BlB,CA4BE,UAAU,CAAEP,gBA5Bd,CA6BE,oBAAoB,CAAEI,qBAAqB,CAACM,UA7B9C,CA8BE,kBAAkB,CAAEN,qBAAqB,CAACO,QA9B5C,CA+BE,eAAe,CACbT,WAAW,CAACa,eAAZ,GAAgCP,SAAhC,CACIN,WAAW,CAACa,eADhB,CAEIzB,MAAM,CAAC0B,IAlCf,iDAqCGvB,WAAW,GAAKe,SAAhB,CACC,oBAAC,8CAAD,kDAA6Bf,WAAW,EAAxC,CADD,CAEG,IAvCN,CADF,CA2CD","sourcesContent":["import * as React from 'react';\nimport {\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderRightView,\n  // eslint-disable-next-line import/no-unresolved\n} from 'react-native-screens';\nimport { Route, useTheme } from '@react-navigation/native';\nimport { NativeStackNavigationOptions } from '../types';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig(props: Props) {\n  const { colors } = useTheme();\n  const {\n    route,\n    title,\n    headerRight,\n    headerTitle,\n    headerBackTitle,\n    headerBackTitleVisible = true,\n    headerHideBackButton,\n    headerHideShadow,\n    headerTintColor,\n    headerLargeTitle,\n    headerTranslucent,\n    headerStyle = {},\n    headerTitleStyle = {},\n    headerLargeTitleStyle = {},\n    headerBackTitleStyle = {},\n    headerShown,\n    gestureEnabled,\n  } = props;\n\n  return (\n    <ScreenStackHeaderConfig\n      hidden={headerShown === false}\n      translucent={headerTranslucent === true}\n      hideShadow={headerHideShadow}\n      hideBackButton={headerHideBackButton}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleFontFamily={headerTitleStyle.fontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={headerBackTitleStyle.fontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      color={headerTintColor !== undefined ? headerTintColor : colors.primary}\n      // Keep this temporarily for compatibility with old versions of screens\n      // @ts-ignore\n      gestureEnabled={gestureEnabled}\n      largeTitle={headerLargeTitle}\n      largeTitleFontFamily={headerLargeTitleStyle.fontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      backgroundColor={\n        headerStyle.backgroundColor !== undefined\n          ? headerStyle.backgroundColor\n          : colors.card\n      }\n    >\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>{headerRight()}</ScreenStackHeaderRightView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]}