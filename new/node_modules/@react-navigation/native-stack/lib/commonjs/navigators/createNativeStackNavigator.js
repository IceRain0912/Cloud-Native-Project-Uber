var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireDefault(require("react"));var _native=require("@react-navigation/native");var _routers=require("@react-navigation/routers");var _reactNativeScreens=require("react-native-screens");var _NativeStackView=_interopRequireDefault(require("../views/NativeStackView"));var _jsxFileName="/Users/satya/Workspace/Projects/navigation-ex/packages/native-stack/src/navigators/createNativeStackNavigator.tsx";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function NativeStackNavigator(props){if(!(0,_reactNativeScreens.screensEnabled)()){throw new Error('Native stack is only available if React Native Screens is enabled.');}var initialRouteName=props.initialRouteName,children=props.children,screenOptions=props.screenOptions,rest=(0,_objectWithoutProperties2.default)(props,["initialRouteName","children","screenOptions"]);var _useNavigationBuilder=(0,_native.useNavigationBuilder)(_routers.StackRouter,{initialRouteName:initialRouteName,children:children,screenOptions:screenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation;_react.default.useEffect(function(){return navigation.addListener&&navigation.addListener('tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread({},_routers.StackActions.popToTop(),{target:state.key}));}});});},[navigation,state.index,state.key]);return _react.default.createElement(_NativeStackView.default,(0,_extends2.default)({},rest,{state:state,navigation:navigation,descriptors:descriptors,__source:{fileName:_jsxFileName,lineNumber:72}}));}var _default=(0,_native.createNavigatorFactory)(NativeStackNavigator);exports.default=_default;
//# sourceMappingURL=createNativeStackNavigator.js.map